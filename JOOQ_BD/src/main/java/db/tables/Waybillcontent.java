/*
 * This file is generated by jOOQ.
 */
package db.tables;


import db.Keys;
import db.Public;
import db.tables.records.WaybillcontentRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Waybillcontent extends TableImpl<WaybillcontentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.WaybillContent</code>
     */
    public static final Waybillcontent WAYBILLCONTENT = new Waybillcontent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WaybillcontentRecord> getRecordType() {
        return WaybillcontentRecord.class;
    }

    /**
     * The column <code>public.WaybillContent.id</code>.
     */
    public final TableField<WaybillcontentRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.WaybillContent.price</code>.
     */
    public final TableField<WaybillcontentRecord, Integer> PRICE = createField(DSL.name("price"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.WaybillContent.quantity</code>.
     */
    public final TableField<WaybillcontentRecord, Integer> QUANTITY = createField(DSL.name("quantity"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.WaybillContent.nomenclature</code>.
     */
    public final TableField<WaybillcontentRecord, String> NOMENCLATURE = createField(DSL.name("nomenclature"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("NULL::character varying", SQLDataType.VARCHAR)), this, "");

    private Waybillcontent(Name alias, Table<WaybillcontentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Waybillcontent(Name alias, Table<WaybillcontentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.WaybillContent</code> table reference
     */
    public Waybillcontent(String alias) {
        this(DSL.name(alias), WAYBILLCONTENT);
    }

    /**
     * Create an aliased <code>public.WaybillContent</code> table reference
     */
    public Waybillcontent(Name alias) {
        this(alias, WAYBILLCONTENT);
    }

    /**
     * Create a <code>public.WaybillContent</code> table reference
     */
    public Waybillcontent() {
        this(DSL.name("WaybillContent"), null);
    }

    public <O extends Record> Waybillcontent(Table<O> child, ForeignKey<O, WaybillcontentRecord> key) {
        super(child, key, WAYBILLCONTENT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<WaybillcontentRecord> getPrimaryKey() {
        return Keys.WAYBILLCONTENT_PKEY;
    }

    @Override
    public List<UniqueKey<WaybillcontentRecord>> getKeys() {
        return Arrays.<UniqueKey<WaybillcontentRecord>>asList(Keys.WAYBILLCONTENT_PKEY);
    }

    @Override
    public Waybillcontent as(String alias) {
        return new Waybillcontent(DSL.name(alias), this);
    }

    @Override
    public Waybillcontent as(Name alias) {
        return new Waybillcontent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Waybillcontent rename(String name) {
        return new Waybillcontent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Waybillcontent rename(Name name) {
        return new Waybillcontent(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
